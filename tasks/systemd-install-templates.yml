---
#- name: Determime if acme_letsencrypt.timer file exists
#  ansible.builtin.stat:
#    path: "{{ systemd_files_location}}/acme_letsencrypt.timer"
#  register: is_acme_letsencrypt_timer_installed
#  become_user: "{{ acme_sh_become_user }}"

#- name: Determine if acme_letsencrypt.service file exists
#  ansible.builtin.stat:
#    path: "{{ systemd_files_location}}/acme_letsencrypt.service"
#  register: is_acme_letsencrypt_service_installed
#  become_user: "{{ acme_sh_become_user }}"

- name: Install {{ systemd_service_name }}.service 
  ansible.builtin.template:
    src: acme_letsencrypt.service.j2
    dest: "{{ systemd_files_location}}/{{ systemd_service_name }}"
    checksum: ""
    force: true
    owner: root
    group: root
    mode: 0644
  when:
#    - not is_acme_letsencrypt_service_installed.stat.exists
    - not acme_sh_uninstall or acme_sh_uninstall|bool == false
  become_user: "{{ acme_sh_become_user }}"

- name: Install {{ systemd_timer_name }}.timer
  ansible.builtin.template:
    src: acme_letsencrypt.timer.j2
    dest: "{{ systemd_files_location}}/{{ systemd_timer_name }}"
    checksum: ""
    force: true
    owner: root
    group: root
    mode: 0644
  when:
#    - not is_acme_letsencrypt_timer_installed.stat.exists
    - not acme_sh_uninstall or acme_sh_uninstall|bool == false
  become_user: "{{ acme_sh_become_user }}"

- name: Systemd Daemon Reload
  ansible.builtin.systemd_service:
    daemon_reload: true
  when:
    - not acme_sh_uninstall or acme_sh_uninstall|bool == false
  become_user: "{{ acme_sh_become_user }}"
